// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimalRepository.Migrations
{
    [DbContext(typeof(AnimalDbContext))]
    [Migration("20240520112939_add-migration initial")]
    partial class addmigrationinitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Adoptado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("AnimalRazaId")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalRazaId");

                    b.ToTable("Animal", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.AnimalRaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("AnimalRaza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Descripcion = "Labrador Retriever",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Bulldog",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Beagle",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Poodle",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "German Shepherd",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Golden Retriever",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Chihuahua",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "Boxer",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 1,
                            Descripcion = "Mestizo",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Otro",
                            TipoId = 1
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "Siamese",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 14,
                            Descripcion = "Persian",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 15,
                            Descripcion = "Maine Coon",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 16,
                            Descripcion = "Ragdoll",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 17,
                            Descripcion = "Bengal",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 18,
                            Descripcion = "Sphynx",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 19,
                            Descripcion = "Russian Blue",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 20,
                            Descripcion = "Scottish Fold",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "Mestizo",
                            TipoId = 2
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "Otro",
                            TipoId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTipo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Perro"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Gato"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("Media", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Animal", b =>
                {
                    b.HasOne("Domain.Entities.AnimalRaza", "Raza")
                        .WithMany("Animales")
                        .HasForeignKey("AnimalRazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("Domain.Entities.AnimalRaza", b =>
                {
                    b.HasOne("Domain.Entities.AnimalTipo", "Tipo")
                        .WithMany("Razas")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Domain.Entities.Media", b =>
                {
                    b.HasOne("Domain.Entities.Animal", "Animal")
                        .WithMany("Media")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Domain.Entities.Animal", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("Domain.Entities.AnimalRaza", b =>
                {
                    b.Navigation("Animales");
                });

            modelBuilder.Entity("Domain.Entities.AnimalTipo", b =>
                {
                    b.Navigation("Razas");
                });
#pragma warning restore 612, 618
        }
    }
}
